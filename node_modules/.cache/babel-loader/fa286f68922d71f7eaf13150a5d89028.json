{"ast":null,"code":"class Settings {\n  constructor(baseURL = 'https://api.jikan.moe', version = 3) {\n    this.setBaseURL(baseURL, version);\n  }\n  /**\r\n   * Delivers the full API Base URL\r\n   * @returns {URL}\r\n   */\n\n\n  getBaseURL() {\n    return this.baseURL;\n  }\n  /**\r\n   * can be used to replace the current API Base URL by a complete new one\r\n   * @param {string} baseURL\r\n   * @param {number} [version]\r\n   */\n\n\n  setBaseURL(baseURL, version) {\n    if (version) this.v = version;\n    this.baseURL = new URL(`/v${this.v}`, baseURL);\n  }\n  /**\r\n   * can be used to change the API version\r\n   * @param {number} version\r\n   */\n\n\n  set version(version) {\n    this.v = version;\n    this.baseURL.pathname = `/v${version}`;\n  }\n  /**\r\n   * delivers the currently used API version\r\n   * @returns {number}\r\n   */\n\n\n  get version() {\n    return this.v;\n  }\n\n}\n\nmodule.exports = new Settings();","map":{"version":3,"sources":["/Users/naman159/Desktop/gitprojs/My-Website/node_modules/jikanjs/lib/util/Settings.js"],"names":["Settings","constructor","baseURL","version","setBaseURL","getBaseURL","v","URL","pathname","module","exports"],"mappings":"AACA,MAAMA,QAAN,CAAe;AAEXC,EAAAA,WAAW,CAACC,OAAO,GAAG,uBAAX,EAAoCC,OAAO,GAAG,CAA9C,EAAiD;AACxD,SAAKC,UAAL,CAAgBF,OAAhB,EAAyBC,OAAzB;AACH;AAED;;;;;;AAIAE,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKH,OAAZ;AACH;AAED;;;;;;;AAKAE,EAAAA,UAAU,CAACF,OAAD,EAAUC,OAAV,EAAmB;AACzB,QAAGA,OAAH,EAAY,KAAKG,CAAL,GAASH,OAAT;AACZ,SAAKD,OAAL,GAAe,IAAIK,GAAJ,CAAS,KAAI,KAAKD,CAAE,EAApB,EAAuBJ,OAAvB,CAAf;AACH;AAED;;;;;;AAIA,MAAIC,OAAJ,CAAYA,OAAZ,EAAqB;AACjB,SAAKG,CAAL,GAASH,OAAT;AACA,SAAKD,OAAL,CAAaM,QAAb,GAAyB,KAAIL,OAAQ,EAArC;AACH;AAED;;;;;;AAIA,MAAIA,OAAJ,GAAc;AACV,WAAO,KAAKG,CAAZ;AACH;;AAvCU;;AA0CfG,MAAM,CAACC,OAAP,GAAiB,IAAIV,QAAJ,EAAjB","sourcesContent":["\r\nclass Settings {\r\n\r\n    constructor(baseURL = 'https://api.jikan.moe', version = 3) {\r\n        this.setBaseURL(baseURL, version);\r\n    }\r\n\r\n    /**\r\n     * Delivers the full API Base URL\r\n     * @returns {URL}\r\n     */\r\n    getBaseURL() {\r\n        return this.baseURL;\r\n    }\r\n\r\n    /**\r\n     * can be used to replace the current API Base URL by a complete new one\r\n     * @param {string} baseURL\r\n     * @param {number} [version]\r\n     */\r\n    setBaseURL(baseURL, version) {\r\n        if(version) this.v = version;\r\n        this.baseURL = new URL(`/v${this.v}`, baseURL);\r\n    }\r\n\r\n    /**\r\n     * can be used to change the API version\r\n     * @param {number} version\r\n     */\r\n    set version(version) {\r\n        this.v = version;\r\n        this.baseURL.pathname = `/v${version}`;\r\n    }\r\n\r\n    /**\r\n     * delivers the currently used API version\r\n     * @returns {number}\r\n     */\r\n    get version() {\r\n        return this.v;\r\n    }\r\n}\r\n\r\nmodule.exports = new Settings();\r\n"]},"metadata":{},"sourceType":"script"}