{"ast":null,"code":"var _slicedToArray = require(\"/Users/naman159/Desktop/gitprojs/My-Website/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _regeneratorRuntime = require(\"/Users/naman159/Desktop/gitprojs/My-Website/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/naman159/Desktop/gitprojs/My-Website/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/naman159/Desktop/gitprojs/My-Website/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/naman159/Desktop/gitprojs/My-Website/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\n//@ts-check\nvar Settings = require('./Settings');\n\nvar fetch = require('cross-fetch');\n\nvar Request = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function Request() {\n    _classCallCheck(this, Request);\n  }\n\n  _createClass(Request, [{\n    key: \"send\",\n\n    /**\r\n     * sends a request with the given list of URL parts and the optional list of query parameter\r\n     * @param {*[]} args           URL Parts\r\n     * @param {{}} [parameter]     Query Parameter\r\n     * @returns {Promise<*>} returns the request response or an error\r\n     */\n    value: function () {\n      var _send = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(args, parameter) {\n        var response, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(this.urlBuilder(args, parameter));\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                data = _context.sent;\n\n                if (!(response.status !== 200)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", Promise.reject(new Error(data.error)));\n\n              case 8:\n                return _context.abrupt(\"return\", Promise.resolve(data));\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function send(_x, _x2) {\n        return _send.apply(this, arguments);\n      }\n\n      return send;\n    }()\n    /**\r\n     *\r\n     * @param {*[]} args            URL Parts\r\n     * @param {{}} [parameter]      Query Parameter\r\n     * @returns {string}            URL\r\n     */\n\n  }, {\n    key: \"urlBuilder\",\n    value: function urlBuilder(args, parameter) {\n      var url = new URL(Settings.getBaseURL());\n      url.pathname += '/' + args.filter(function (x) {\n        return x;\n      }).join('/');\n      if (parameter) Object.entries(parameter).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        return url.searchParams.append(key, value);\n      });\n      return url.href;\n    }\n  }]);\n\n  return Request;\n}();\n\nmodule.exports = Request;","map":{"version":3,"sources":["/Users/naman159/Desktop/gitprojs/My-Website/client/node_modules/jikanjs/lib/util/Request.js"],"names":["Settings","require","fetch","Request","args","parameter","urlBuilder","response","json","data","status","Promise","reject","Error","error","resolve","url","URL","getBaseURL","pathname","filter","x","join","Object","entries","forEach","key","value","searchParams","append","href","module","exports"],"mappings":";;;;;;;;;;AAAA;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,aAAD,CAArB;;IAEME,O;;;;;;;;;;AAEF;;;;;;;4FAMWC,I,EAAMC,S;;;;;;;uBACQH,KAAK,CAAC,KAAKI,UAAL,CAAgBF,IAAhB,EAAsBC,SAAtB,CAAD,C;;;AAAtBE,gBAAAA,Q;;uBACaA,QAAQ,CAACC,IAAT,E;;;AAAbC,gBAAAA,I;;sBAEAF,QAAQ,CAACG,MAAT,KAAoB,G;;;;;iDAAYC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAUJ,IAAI,CAACK,KAAf,CAAf,C;;;iDAC7BH,OAAO,CAACI,OAAR,CAAgBN,IAAhB,C;;;;;;;;;;;;;;;;AAGX;;;;;;;;;+BAMWL,I,EAAMC,S,EAAW;AACxB,UAAIW,GAAG,GAAG,IAAIC,GAAJ,CAAQjB,QAAQ,CAACkB,UAAT,EAAR,CAAV;AAEAF,MAAAA,GAAG,CAACG,QAAJ,IAAgB,MAAMf,IAAI,CAACgB,MAAL,CAAY,UAAAC,CAAC;AAAA,eAAIA,CAAJ;AAAA,OAAb,EAAoBC,IAApB,CAAyB,GAAzB,CAAtB;AACA,UAAIjB,SAAJ,EAAekB,MAAM,CAACC,OAAP,CAAenB,SAAf,EAA0BoB,OAA1B,CAAkC;AAAA;AAAA,YAAEC,GAAF;AAAA,YAAOC,KAAP;;AAAA,eAAkBX,GAAG,CAACY,YAAJ,CAAiBC,MAAjB,CAAwBH,GAAxB,EAA6BC,KAA7B,CAAlB;AAAA,OAAlC;AAEf,aAAOX,GAAG,CAACc,IAAX;AACH;;;;;;AAGLC,MAAM,CAACC,OAAP,GAAiB7B,OAAjB","sourcesContent":["//@ts-check\r\n\r\nconst Settings = require('./Settings');\r\nconst fetch = require('cross-fetch');\r\n\r\nclass Request {\r\n\r\n    /**\r\n     * sends a request with the given list of URL parts and the optional list of query parameter\r\n     * @param {*[]} args           URL Parts\r\n     * @param {{}} [parameter]     Query Parameter\r\n     * @returns {Promise<*>} returns the request response or an error\r\n     */\r\n    async send(args, parameter) {\r\n        var response = await fetch(this.urlBuilder(args, parameter));\r\n        var data = await response.json();\r\n\r\n        if (response.status !== 200) return Promise.reject(new Error(data.error));\r\n        return Promise.resolve(data);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*[]} args            URL Parts\r\n     * @param {{}} [parameter]      Query Parameter\r\n     * @returns {string}            URL\r\n     */\r\n    urlBuilder(args, parameter) {\r\n        var url = new URL(Settings.getBaseURL());\r\n\r\n        url.pathname += '/' + args.filter(x => x).join('/');\r\n        if (parameter) Object.entries(parameter).forEach(([key, value]) => url.searchParams.append(key, value));\r\n\r\n        return url.href;\r\n    }\r\n}\r\n\r\nmodule.exports = Request;\r\n"]},"metadata":{},"sourceType":"script"}