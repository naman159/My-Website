{"ast":null,"code":"var _classCallCheck = require(\"/Users/naman159/Desktop/gitprojs/My-Website/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/naman159/Desktop/gitprojs/My-Website/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Settings = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function Settings() {\n    var baseURL = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'https://api.jikan.moe';\n    var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n\n    _classCallCheck(this, Settings);\n\n    this.setBaseURL(baseURL, version);\n  }\n  /**\r\n   * Delivers the full API Base URL\r\n   * @returns {URL}\r\n   */\n\n\n  _createClass(Settings, [{\n    key: \"getBaseURL\",\n    value: function getBaseURL() {\n      return this.baseURL;\n    }\n    /**\r\n     * can be used to replace the current API Base URL by a complete new one\r\n     * @param {string} baseURL\r\n     * @param {number} [version]\r\n     */\n\n  }, {\n    key: \"setBaseURL\",\n    value: function setBaseURL(baseURL, version) {\n      if (version) this.v = version;\n      this.baseURL = new URL(\"/v\".concat(this.v), baseURL);\n    }\n    /**\r\n     * can be used to change the API version\r\n     * @param {number} version\r\n     */\n\n  }, {\n    key: \"version\",\n    set: function set(version) {\n      this.v = version;\n      this.baseURL.pathname = \"/v\".concat(version);\n    }\n    /**\r\n     * delivers the currently used API version\r\n     * @returns {number}\r\n     */\n    ,\n    get: function get() {\n      return this.v;\n    }\n  }]);\n\n  return Settings;\n}();\n\nmodule.exports = new Settings();","map":{"version":3,"sources":["/Users/naman159/Desktop/gitprojs/My-Website/client/node_modules/jikanjs/lib/util/Settings.js"],"names":["Settings","baseURL","version","setBaseURL","v","URL","pathname","module","exports"],"mappings":";;;;IACMA,Q;;;AAEF,sBAA4D;AAAA,QAAhDC,OAAgD,uEAAtC,uBAAsC;AAAA,QAAbC,OAAa,uEAAH,CAAG;;AAAA;;AACxD,SAAKC,UAAL,CAAgBF,OAAhB,EAAyBC,OAAzB;AACH;AAED;;;;;;;;iCAIa;AACT,aAAO,KAAKD,OAAZ;AACH;AAED;;;;;;;;+BAKWA,O,EAASC,O,EAAS;AACzB,UAAGA,OAAH,EAAY,KAAKE,CAAL,GAASF,OAAT;AACZ,WAAKD,OAAL,GAAe,IAAII,GAAJ,aAAa,KAAKD,CAAlB,GAAuBH,OAAvB,CAAf;AACH;AAED;;;;;;;sBAIYC,O,EAAS;AACjB,WAAKE,CAAL,GAASF,OAAT;AACA,WAAKD,OAAL,CAAaK,QAAb,eAA6BJ,OAA7B;AACH;AAED;;;;;wBAIc;AACV,aAAO,KAAKE,CAAZ;AACH;;;;;;AAGLG,MAAM,CAACC,OAAP,GAAiB,IAAIR,QAAJ,EAAjB","sourcesContent":["\r\nclass Settings {\r\n\r\n    constructor(baseURL = 'https://api.jikan.moe', version = 3) {\r\n        this.setBaseURL(baseURL, version);\r\n    }\r\n\r\n    /**\r\n     * Delivers the full API Base URL\r\n     * @returns {URL}\r\n     */\r\n    getBaseURL() {\r\n        return this.baseURL;\r\n    }\r\n\r\n    /**\r\n     * can be used to replace the current API Base URL by a complete new one\r\n     * @param {string} baseURL\r\n     * @param {number} [version]\r\n     */\r\n    setBaseURL(baseURL, version) {\r\n        if(version) this.v = version;\r\n        this.baseURL = new URL(`/v${this.v}`, baseURL);\r\n    }\r\n\r\n    /**\r\n     * can be used to change the API version\r\n     * @param {number} version\r\n     */\r\n    set version(version) {\r\n        this.v = version;\r\n        this.baseURL.pathname = `/v${version}`;\r\n    }\r\n\r\n    /**\r\n     * delivers the currently used API version\r\n     * @returns {number}\r\n     */\r\n    get version() {\r\n        return this.v;\r\n    }\r\n}\r\n\r\nmodule.exports = new Settings();\r\n"]},"metadata":{},"sourceType":"script"}